[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "eqdsk"
dynamic = ['version']
authors = [{ name = "The Bluemira Developers" }]
description = """A reader, writer and converter for the eqdsk format"""
readme = "README.md"
license = "LGPL-2.1-or-later"
requires-python = ">=3.8"
keywords = ["tokamak", "cocos", "eqdsk", "GEQDSK"]
classifiers = [
  "Programming Language :: Python",
  "Development Status :: 3 - Alpha",
  "Natural Language :: English",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Physics",
]

dependencies = ["fortranformat", "numpy"]

[project.optional-dependencies]
dev = ["pre-commit"]
test = [
  "pytest",
  "coverage[toml]",
  "pytest-html",
  "pytest-metadata",
  "pytest-json-report",
]
docs = ["sphinx", "sphinx-autoapi", "sphinx-rtd-theme"]
lint = ["ruff", "mypy"]
[project.urls]
Source = "https://github.com/Fusion-Power-Plant-Framework/eqdsk"
Documentation = "https://github.com/Fusion-Power-Plant-Framework/eqdsk#readme"
Issues = "https://github.com/Fusion-Power-Plant-Framework/eqdsk/issues"

[tool.hatch.version]
source = "vcs"
[tool.hatch.build.hooks.vcs]
version-file = "eqdsk/_version.py"

# env: default
[tool.hatch.envs.default]
features = ["dev", "test", "docs", "lint"]

# env: test
[tool.hatch.envs.test]
features = ["test"]
[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.10"]
[tool.hatch.envs.test.scripts]
tests = "pytest {args:tests}"
tests-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov-all = ["tests-cov", "cov-report"]

# env: docs
[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
docs = "sphinx-build -b html docs docs/_build"

# env: lint
[tool.hatch.envs.lint]
detached = true                               # Don't inherit from default (does not download project dependencies)
dependencies = ["ruff", "mypy", "pre-commit"]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/eqdsk tests}"
style = ["ruff {args:.}"]
fmt = ["pre-commit run --all-files --hook-stage manual"]
all = ["style", "typing"]

# tool: ruff
[tool.ruff]
line-length = 80
preview = true
exclude = [
  ".git",
  "__pycache__",
  "documentation",
  ".env",
  ".idea",
  ".pytest_cache",
  "htmlcov",
]
select = ["ALL"]
extend-select = ["E241", "CPY001", "PLR0904"]
ignore = [
  "COM812",
  "ISC001",
  "CPY001",
  "D104",
  "D205",
  "ANN206",
  "ANN201",
  "ANN204",
  "ANN102",
  "ANN101",
  "T201",
  "N803",
  "N806",
  "N815",
  "TRY003",
  "EM101",
  "EM102",
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]


[tool.ruff.isort]
known-first-party = ["eqdsk"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.mccabe]
max-complexity = 20

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
"__init__.py" = ["F401", "F403"]

[tool.coverage.run]
source_pkgs = ["eqdsk", "tests"]
branch = true
parallel = true
omit = ["eqdsk/_version.py"]

[tool.coverage.paths]
eqdsk = ["eqdsk", "*/eqdsk"]
tests = ["tests", "*/eqdsk/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
"omit" = ["eqdsk/_version.py"]

# [tool.pytest.ini_options]
# addopts = "--html=report.html --self-contained-html --strict-markers -r fEX"
# filterwarnings = ['ignore:Matplotlib is currently using agg:UserWarning']
